<?php
/**
 * PublicApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Ory\Kratos\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory Kratos API
 *
 * Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests.
 *
 * The version of the OpenAPI document: v0.0.0-alpha.38
 * Contact: hi@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Ory\Kratos\Client\Test\Api;

use \Ory\Kratos\Client\Configuration;
use \Ory\Kratos\Client\ApiException;
use \Ory\Kratos\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PublicApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ory\Kratos\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PublicApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getSchema
     *
     * .
     *
     */
    public function testGetSchema()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceError
     *
     * Get User-Facing Self-Service Errors.
     *
     */
    public function testGetSelfServiceError()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceLoginFlow
     *
     * Get Login Flow.
     *
     */
    public function testGetSelfServiceLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceRecoveryFlow
     *
     * Get information about a recovery flow.
     *
     */
    public function testGetSelfServiceRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceRegistrationFlow
     *
     * Get Registration Flow.
     *
     */
    public function testGetSelfServiceRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceSettingsFlow
     *
     * Get Settings Flow.
     *
     */
    public function testGetSelfServiceSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceVerificationFlow
     *
     * Get Verification Flow.
     *
     */
    public function testGetSelfServiceVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceBrowserLogoutFlow
     *
     * Initialize Browser-Based Logout User Flow.
     *
     */
    public function testInitializeSelfServiceBrowserLogoutFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceLoginViaAPIFlow
     *
     * Initialize Login Flow for API clients.
     *
     */
    public function testInitializeSelfServiceLoginViaAPIFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceLoginViaBrowserFlow
     *
     * Initialize Login Flow for browsers.
     *
     */
    public function testInitializeSelfServiceLoginViaBrowserFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRecoveryViaAPIFlow
     *
     * Initialize Recovery Flow for API Clients.
     *
     */
    public function testInitializeSelfServiceRecoveryViaAPIFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRecoveryViaBrowserFlow
     *
     * Initialize Recovery Flow for Browser Clients.
     *
     */
    public function testInitializeSelfServiceRecoveryViaBrowserFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRegistrationViaAPIFlow
     *
     * Initialize Registration Flow for API clients.
     *
     */
    public function testInitializeSelfServiceRegistrationViaAPIFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRegistrationViaBrowserFlow
     *
     * Initialize Registration Flow for browsers.
     *
     */
    public function testInitializeSelfServiceRegistrationViaBrowserFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceSettingsViaAPIFlow
     *
     * Initialize Settings Flow for API Clients.
     *
     */
    public function testInitializeSelfServiceSettingsViaAPIFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceSettingsViaBrowserFlow
     *
     * Initialize Settings Flow for Browsers.
     *
     */
    public function testInitializeSelfServiceSettingsViaBrowserFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceVerificationViaAPIFlow
     *
     * Initialize Verification Flow for API Clients.
     *
     */
    public function testInitializeSelfServiceVerificationViaAPIFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceVerificationViaBrowserFlow
     *
     * Initialize Verification Flow for Browser Clients.
     *
     */
    public function testInitializeSelfServiceVerificationViaBrowserFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revokeSession
     *
     * Initialize Logout Flow for API Clients - Revoke a Session.
     *
     */
    public function testRevokeSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceLoginFlow
     *
     * Submit a Login Flow.
     *
     */
    public function testSubmitSelfServiceLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceRecoveryFlow
     *
     * Complete Recovery Flow.
     *
     */
    public function testSubmitSelfServiceRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceRecoveryFlowWithLinkMethod
     *
     * Complete Recovery Flow with Link Method.
     *
     */
    public function testSubmitSelfServiceRecoveryFlowWithLinkMethod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceRegistrationFlow
     *
     * Submit a Registration Flow.
     *
     */
    public function testSubmitSelfServiceRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceSettingsFlow
     *
     * Complete Settings Flow.
     *
     */
    public function testSubmitSelfServiceSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceVerificationFlow
     *
     * Complete Verification Flow.
     *
     */
    public function testSubmitSelfServiceVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for whoami
     *
     * Check Who the Current HTTP Session Belongs To.
     *
     */
    public function testWhoami()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
